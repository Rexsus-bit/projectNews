plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "io.freefair.lombok" version "8.3"
    id 'jacoco'
    id 'jacoco-report-aggregation'
}

group = 'com.main'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.5.Final"
}

bootJar {
    archiveClassifier = 'exec'
    enabled = true
}

jar {
    archiveClassifier = ''
    enabled = true
}

jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = layout.buildDirectory.dir('customreports/jacoco')
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}



dependencies {

    implementation project(':statserver')
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation 'org.springframework.kafka:spring-kafka:3.0.9'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.2'
    implementation ('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'){
        exclude group: 'org.mapstruct', module: 'mapstruct'
    }
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.24.0'
    implementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.0.3'
    implementation 'org.postgresql:postgresql:42.6.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.testcontainers:testcontainers:1.19.1'
    testImplementation 'org.testcontainers:jdbc:1.19.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.1'
    testImplementation 'org.testcontainers:postgresql:1.19.3'
    testImplementation 'com.h2database:h2:2.1.214'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.main.mainserver.MainserverApplication'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.verbose=true'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
